# Lab: page tables 书面答复
1) 还能通过共享只读页提速的系统调用？  
   - getppid / getuid / getgid / uptime …  
     这些调用都只是返回内核中现成的一两个数字，不需要修改状态；  
     内核在进程创建或时钟中断里把值写到共享页，用户态直接读即可省掉陷入/返回的开销。

2) vmprint 输出解释  
   - 顶层 L2 页表条目 0 覆盖用户地址 0 – 0x0000003fffffffff，条目 255 映射内核 trampoline 区。  
   - L1 的下标 0 只指向一个 L0 子表，里面 0/1/2 分别是 text, data, stack。  
   - L0 条目 1 没有 PTE_U，只有 R/W/V；因此用户态既不能读也不能写。  

3) 为什么 `srcva + len < srcva` 要单独检查？  
   因为无符号加法会在 64 位地址上溢出：  
   例：`srcva = 0xffffffffffffff00`, `len = 0x200`  
   前两个范围检查都通过，但结果回绕到 `0x100`，实际跨越了地址 0，必须报错。